// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{primitives as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-f-cdf@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import{isPrimitive as l}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-stdev@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@v0.1.0-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/string-repeat@v0.1.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-max@v0.1.1-esm/index.mjs";import{isPrimitive as f}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";function v(t,e){if(!o(e))return new TypeError(i("invalid argument. Options argument must be an object. Value: `%s`.",e));if(s(e,"alpha")){if(t.alpha=e.alpha,!l(t.alpha)||m(t.alpha))return new TypeError(i("invalid option. `%s` option must be a number. Option: `%s`.","alpha",t.alpha));if(t.alpha<0||t.alpha>1)return new RangeError(i("invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.","alpha",t.alpha))}return null}var j={numeric:!0};function c(t,e){return String(t).localeCompare(String(e),void 0,j)}function b(t){var e,n,r,s,i;for(e=(n=Array.prototype.slice.call(t)).length,n.sort(c),s=1,i=0;s<e;s++)r=n[s],n[i]!==r&&(n[i+=1]=r);return n.length=i+1,n}function w(t,e,n){var r,s,i,a,o,l,m;for(s=n.length,r={},o=0;o<s;o++)for(i=d(),r[n[o]]={mean:0,sampleSize:0,SD:i},l=0;l<t.length;l++)e[l]===n[o]&&(r[n[o]].SD=i(t[l]));for(l=0;l<t.length;l++)r[e[l]].mean+=t[l],r[e[l]].sampleSize+=1;for(m=0;m<s;m++)a=r[n[m]].mean/r[n[m]].sampleSize,r[n[m]].mean=a;return r}function y(t){var e,n,r;for(n=0,e=t.length,r=0;r<e;r++)n+=(t[r]-n)/(r+1);return n}function S(t){return t<=0?"":g(" ",t)}function x(t){return function(e){var n,r,a,l,m,d,g,v,j,c,b,w,y,x;if(y=4,r=!0,arguments.length>0){if(!o(e))throw new TypeError(i("invalid argument. First argument must be an object. Value: `%s`.",e));if(s(e,"digits")){if(!p(e.digits))throw new TypeError(i("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",e.digits));y=e.digits}if(s(e,"decision")){if(!f(e.decision))throw new TypeError(i("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",e.decision));r=e.decision}}w=-y,x="",x+=t.method,x+="\n\n",x+="Null Hypothesis: All Means Equal",x+="\n",x+="Alternate Hypothesis: At Least one Mean not Equal",x+="\n\n",m=h(t.treatment.ss,w).toString(),b=h(t.error.ss,w).toString(),a=h(t.treatment.ms,w).toString(),j=h(t.error.ms,w).toString(),l=t.treatment.df.toString(),c=t.error.df.toString(),n=h(t.statistic,w).toString(),d=u(u(l.length,c.length),2),g=u(u(m.length,b.length),2),v=u(u(a.length,j.length),3),x+="              ",x+="df",x+=S(1+d),x+="SS",x+=S(2+g),x+="MS",x+=S(1+v),x+="F Score",x+=S(u(7,n.length)-7+2),x+="P Value",x+="\n",x+="Treatment",x+=S(5),x+=t.treatment.df,x+=S(3+d-l.length),x+=m,x+=S(4+g-m.length),x+=a,x+=S(3+v-a.length),x+=n,x+=S(u(7,n.length)-n.length+2),x+=h(t.pValue,w),x+="\n",x+="Errors",x+="        ",x+=t.error.df,x+=S(3+d-c.length),x+=b,x+=S(4+g-b.length),x+=j,r&&(x+="\n\n",t.rejected?(x+="Reject Null: ",x+=h(t.pValue,w),x+=" <= ",x+=t.alpha):(x+="Fail to Reject Null: ",x+=h(t.pValue,w),x+=" >= ",x+=t.alpha));return x}}function E(o,l,m){var d,p,h,g,u,f,j,c,S,E,V,T,O,A,F,R,z,N,q,M;if(!e(o)&&!t(o))throw new TypeError(i("invalid argument. First argument must be a numeric array. Value: `%s`.",o));if(R={alpha:.05},arguments.length>2&&(z=v(R,m)))throw z;if((A=o.length)<=1)throw new RangeError(i("invalid argument. First argument must contain at least two elements. Value: `%s`.",o));if(!n(l))throw new TypeError(i("invalid argument. Second argument must be an array. Value: `%s`.",E));if((c=(E=b(l)).length)<=1)throw new RangeError(i("invalid argument. Second argument must contain at least two unique elements. Value: `%s`.",E));if(A!==l.length)throw new RangeError("invalid arguments. First and second arguments must be arrays having the same length.");for(g=0,h=0,V=w(o,l,E),j=y(o),M=0;M<A;M++)g+=q=(o[M]-j)*(o[M]-j);for(f in q=0,V)s(V,f)&&(q=(V[f].mean-j)*(V[f].mean-j),h+=V[f].sampleSize*q);return F=1-a(S=(d=h/(T=c-1))/(p=(u=g-h)/(O=A-c)),T,O),N={},r(f={},"df",T),r(f,"ss",h),r(f,"ms",d),r(N,"treatment",f),r(z={},"df",O),r(z,"ss",u),r(z,"ms",p),r(N,"error",z),r(N,"statistic",S),r(N,"pValue",F),r(N,"means",V),r(N,"method","One-Way ANOVA"),r(N,"alpha",R.alpha),r(N,"rejected",F<=R.alpha),r(N,"print",x(N)),N}export{E as default};
//# sourceMappingURL=index.mjs.map
